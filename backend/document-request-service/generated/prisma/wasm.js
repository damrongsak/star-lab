/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip,
} = require("./runtime/index-browser.js");

const Prisma = {};

exports.Prisma = Prisma;
exports.$Enums = {};

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed",
};

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.Decimal = Decimal;

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.validator = Public.validator;

/**
 * Extensions
 */
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull;
Prisma.JsonNull = objectEnumValues.instances.JsonNull;
Prisma.AnyNull = objectEnumValues.instances.AnyNull;

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull,
};

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: "ReadUncommitted",
  ReadCommitted: "ReadCommitted",
  RepeatableRead: "RepeatableRead",
  Serializable: "Serializable",
});

exports.Prisma.CompaniesScalarFieldEnum = {
  id: "id",
  company_name_en: "company_name_en",
  company_name_th: "company_name_th",
  tax_id: "tax_id",
  address: "address",
  sub_district: "sub_district",
  district: "district",
  province: "province",
  postal_code: "postal_code",
  telephone: "telephone",
  fax_number: "fax_number",
  created_at: "created_at",
  updated_at: "updated_at",
};

exports.Prisma.Document_requestScalarFieldEnum = {
  id: "id",
  request_no: "request_no",
  request_date: "request_date",
  user_id: "user_id",
  company_id: "company_id",
  document_type: "document_type",
  description: "description",
  status: "status",
  paid_status: "paid_status",
  created_at: "created_at",
  updated_at: "updated_at",
};

exports.Prisma.Knex_migrationsScalarFieldEnum = {
  id: "id",
  name: "name",
  batch: "batch",
  migration_time: "migration_time",
};

exports.Prisma.Knex_migrations_lockScalarFieldEnum = {
  index: "index",
  is_locked: "is_locked",
};

exports.Prisma.Receipt_addressesScalarFieldEnum = {
  id: "id",
  address: "address",
  province: "province",
  district: "district",
  sub_district: "sub_district",
  postal_code: "postal_code",
  telephone: "telephone",
  fax_number: "fax_number",
  created_at: "created_at",
  updated_at: "updated_at",
};

exports.Prisma.Sample_listScalarFieldEnum = {
  id: "id",
  request_no: "request_no",
  sent_sample_date: "sent_sample_date",
  animal_type: "animal_type",
  sample_specimen: "sample_specimen",
  panel: "panel",
  method: "method",
  sample_qty: "sample_qty",
  is_deleted: "is_deleted",
  created_at: "created_at",
  updated_at: "updated_at",
};

exports.Prisma.UsersScalarFieldEnum = {
  id: "id",
  username: "username",
  first_name: "first_name",
  last_name: "last_name",
  email: "email",
  password: "password",
  role: "role",
  is_active: "is_active",
  created_at: "created_at",
  updated_at: "updated_at",
};

exports.Prisma.Worker_profilesScalarFieldEnum = {
  id: "id",
  id_card_number: "id_card_number",
  user_id: "user_id",
  title: "title",
  first_name: "first_name",
  last_name: "last_name",
  phone_number: "phone_number",
  mobile_phone_number: "mobile_phone_number",
  email: "email",
  id_card_file_path: "id_card_file_path",
  created_at: "created_at",
  updated_at: "updated_at",
};

exports.Prisma.SortOrder = {
  asc: "asc",
  desc: "desc",
};

exports.Prisma.QueryMode = {
  default: "default",
  insensitive: "insensitive",
};

exports.Prisma.NullsOrder = {
  first: "first",
  last: "last",
};

exports.Prisma.ModelName = {
  companies: "companies",
  document_request: "document_request",
  knex_migrations: "knex_migrations",
  knex_migrations_lock: "knex_migrations_lock",
  receipt_addresses: "receipt_addresses",
  sample_list: "sample_list",
  users: "users",
  worker_profiles: "worker_profiles",
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message;
        const runtime = getRuntime();
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message =
            "PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `" +
            runtime.prettyName +
            "`).";
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`;

        throw new Error(message);
      },
    });
  }
}

exports.PrismaClient = PrismaClient;

Object.assign(exports, Prisma);
