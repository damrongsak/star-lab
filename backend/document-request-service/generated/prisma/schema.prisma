generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model companies {
  id              Int       @id @default(autoincrement())
  company_name_en String    @db.VarChar(255)
  company_name_th String    @db.VarChar(255)
  tax_id          String?   @db.VarChar(50)
  address         String    @db.VarChar(255)
  sub_district    String    @db.VarChar(100)
  district        String    @db.VarChar(100)
  province        String    @db.VarChar(100)
  postal_code     String    @db.VarChar(10)
  telephone       String?   @db.VarChar(20)
  fax_number      String?   @db.VarChar(20)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
}

model document_request {
  id            Int           @id @default(autoincrement())
  request_no    String        @unique(map: "document_request_request_no_unique") @db.VarChar(50)
  request_date  DateTime?     @default(now()) @db.Timestamptz(6)
  user_id       Int
  company_id    Int
  document_type String        @db.VarChar(50)
  description   String?
  status        String?       @default("pending") @db.VarChar(20)
  paid_status   Boolean?      @default(false)
  created_at    DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?     @default(now()) @db.Timestamptz(6)
  sample_list   sample_list[]
}

model knex_migrations {
  id             Int       @id @default(autoincrement())
  name           String?   @db.VarChar(255)
  batch          Int?
  migration_time DateTime? @db.Timestamptz(6)
}

model knex_migrations_lock {
  index     Int  @id @default(autoincrement())
  is_locked Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model receipt_addresses {
  id           Int       @id @default(autoincrement())
  address      String    @db.VarChar(255)
  province     String    @db.VarChar(100)
  district     String    @db.VarChar(100)
  sub_district String    @db.VarChar(100)
  postal_code  String    @db.VarChar(10)
  telephone    String?   @db.VarChar(20)
  fax_number   String?   @db.VarChar(20)
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sample_list {
  id               Int              @id @default(autoincrement())
  request_no       String           @db.VarChar(50)
  sent_sample_date DateTime?        @db.Date
  animal_type      String?          @db.VarChar(100)
  sample_specimen  String?          @db.VarChar(255)
  panel            String?          @db.VarChar(255)
  method           String?          @db.VarChar(100)
  sample_qty       Int?
  is_deleted       Boolean          @default(false)
  created_at       DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?        @default(now()) @db.Timestamptz(6)
  document_request document_request @relation(fields: [request_no], references: [request_no], onDelete: Cascade, onUpdate: NoAction, map: "sample_list_request_no_foreign")
}

model users {
  id              Int               @id @default(autoincrement())
  username        String            @unique(map: "users_username_unique") @db.VarChar(50)
  first_name      String?           @db.VarChar(100)
  last_name       String?           @db.VarChar(100)
  email           String            @unique(map: "users_email_unique") @db.VarChar(100)
  password        String            @db.VarChar(255)
  role            String?           @default("customer") @db.VarChar(20)
  is_active       Boolean?          @default(false)
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?         @default(now()) @db.Timestamptz(6)
  worker_profiles worker_profiles[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model worker_profiles {
  id                  Int       @id @default(autoincrement())
  id_card_number      String    @unique(map: "worker_profiles_id_card_number_unique") @db.VarChar(20)
  user_id             Int
  title               String?   @db.VarChar(50)
  first_name          String    @db.VarChar(100)
  last_name           String    @db.VarChar(100)
  phone_number        String?   @db.VarChar(20)
  mobile_phone_number String    @db.VarChar(20)
  email               String?   @db.VarChar(255)
  id_card_file_path   String?   @db.VarChar(255)
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)
  users               users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "worker_profiles_user_id_foreign")
}
